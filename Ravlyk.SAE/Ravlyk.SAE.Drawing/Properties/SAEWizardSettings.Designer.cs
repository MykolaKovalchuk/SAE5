//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ravlyk.SAE.Drawing.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    public sealed partial class SAEWizardSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static SAEWizardSettings defaultInstance = ((SAEWizardSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new SAEWizardSettings())));
        
        public static SAEWizardSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public int ResizeWidth {
            get {
                return ((int)(this["ResizeWidth"]));
            }
            set {
                this["ResizeWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("150")]
        public int ResizeHeight {
            get {
                return ((int)(this["ResizeHeight"]));
            }
            set {
                this["ResizeHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DMC")]
        public string PaletteName {
            get {
                return ((string)(this["PaletteName"]));
            }
            set {
                this["PaletteName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("30")]
        public int MaxColors {
            get {
                return ((int)(this["MaxColors"]));
            }
            set {
                this["MaxColors"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool KeepAspect {
            get {
                return ((bool)(this["KeepAspect"]));
            }
            set {
                this["KeepAspect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int DitherLevel {
            get {
                return ((int)(this["DitherLevel"]));
            }
            set {
                this["DitherLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Visual")]
        public string ColorComparisonType {
            get {
                return ((string)(this["ColorComparisonType"]));
            }
            set {
                this["ColorComparisonType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Lanczos3")]
        public string ResizeFilterType {
            get {
                return ((string)(this["ResizeFilterType"]));
            }
            set {
                this["ResizeFilterType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool EnsureBlackAndWhiteColors {
            get {
                return ((bool)(this["EnsureBlackAndWhiteColors"]));
            }
            set {
                this["EnsureBlackAndWhiteColors"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ravlyk.Znaky.2")]
        public string SymbolsFontName {
            get {
                return ((string)(this["SymbolsFontName"]));
            }
            set {
                this["SymbolsFontName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SymbolsFontIncludeNumbers {
            get {
                return ((bool)(this["SymbolsFontIncludeNumbers"]));
            }
            set {
                this["SymbolsFontIncludeNumbers"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SymbolsFontIncludeLetters {
            get {
                return ((bool)(this["SymbolsFontIncludeLetters"]));
            }
            set {
                this["SymbolsFontIncludeLetters"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool SymbolsFontIncludeSymbols {
            get {
                return ((bool)(this["SymbolsFontIncludeSymbols"]));
            }
            set {
                this["SymbolsFontIncludeSymbols"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SymbolsFontLastUsedSymbols {
            get {
                return ((string)(this["SymbolsFontLastUsedSymbols"]));
            }
            set {
                this["SymbolsFontLastUsedSymbols"] = value;
            }
        }
    }
}
