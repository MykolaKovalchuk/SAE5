<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="upDownHeight.ToolTip" xml:space="preserve">
    <value>Höhe der Vorlage</value>
  </data>
  <data name="buttonRotateCW.Text" xml:space="preserve">
    <value>Rechts drehen</value>
  </data>
  <data name="ribbonPanelSymbolsSelect.Text" xml:space="preserve">
    <value>Auswählen</value>
  </data>
  <data name="ribbonTabPreview.Text" xml:space="preserve">
    <value>Vorschau</value>
  </data>
  <data name="buttonWhiteSymbols.Text" xml:space="preserve">
    <value>Weiße Symbole</value>
  </data>
  <data name="buttonRotateCCW.Text" xml:space="preserve">
    <value>Links drehen</value>
  </data>
  <data name="upDownStitchesPerUnit.Text" xml:space="preserve">
    <value>Anzahl</value>
  </data>
  <data name="checkBoxLetters.Text" xml:space="preserve">
    <value>Buchstaben</value>
  </data>
  <data name="checkBoxLetters.ToolTip" xml:space="preserve">
    <value>Buchstaben einschließen</value>
  </data>
  <data name="upDownHeight.Text" xml:space="preserve">
    <value>Höhe</value>
  </data>
  <data name="checkBoxSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="ribbonPanelTransform.Text" xml:space="preserve">
    <value>Transformation</value>
  </data>
  <data name="buttonColors.Text" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="comboBoxResizeFilter.ToolTip" xml:space="preserve">
    <value>Filter zum Weichzeichnen</value>
  </data>
  <data name="buttonClear.Text" xml:space="preserve">
    <value>Leeren</value>
  </data>
  <data name="comboBoxKit.Text" xml:space="preserve">
    <value>Farbpalette</value>
  </data>
  <data name="ribbonTabAdvanced.Text" xml:space="preserve">
    <value>Erweitert</value>
  </data>
  <data name="upDownDither.ToolTip" xml:space="preserve">
    <value>Stärke des Weichzeichners, welche angibt, wie weich die Farbübergänge dargestellt werden.</value>
  </data>
  <data name="checkBoxLines.Text" xml:space="preserve">
    <value>Linien</value>
  </data>
  <data name="ribbonPanelColors.Text" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="ribbonPanelAdvImage.Text" xml:space="preserve">
    <value>Bild</value>
  </data>
  <data name="checkBoxFixAspect.Text" xml:space="preserve">
    <value>Größenverhältnis anpassen</value>
  </data>
  <data name="buttonRandom.ToolTip" xml:space="preserve">
    <value>Wählt zufällige Symbole</value>
  </data>
  <data name="buttonRect.ToolTip" xml:space="preserve">
    <value>Schneidet Bild in rechteckigem Bereich aus</value>
  </data>
  <data name="upDownMaxColors.ToolTip" xml:space="preserve">
    <value>Maximale Farbanzahl, die in der Vorlage verwendet werden soll. Wirklich verwendete Farben können niedriger als dieser Wert sein.</value>
  </data>
  <data name="comboBoxResizeFilter.Text" xml:space="preserve">
    <value>Weichzeichner</value>
  </data>
  <data name="buttonInches.ToolTip" xml:space="preserve">
    <value>Gibt Größe in Inch (Zoll) an</value>
  </data>
  <data name="tabPageSourceImage.Text" xml:space="preserve">
    <value>Quellbild</value>
  </data>
  <data name="tabPageResultImage.Text" xml:space="preserve">
    <value>Fertige Vorlage</value>
  </data>
  <data name="checkBoxLines.ToolTip" xml:space="preserve">
    <value>Rasterlinien anzeigen</value>
  </data>
  <data name="checkBoxEnsureBlackAndWhite.Text" xml:space="preserve">
    <value>Füge Schwarz und Weiß hinzu</value>
  </data>
  <data name="ribbonPanelAdvColor.Text" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="buttonFlipH.ToolTip" xml:space="preserve">
    <value>Kippe das Bild horizontal (links nach rechts)</value>
  </data>
  <data name="buttonSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="buttonLoad.ToolTip" xml:space="preserve">
    <value>Öffnet ein Fenster zum auswählen einer Datei, welche in ein Stich-Schema umgewandelt werden soll</value>
  </data>
  <data name="buttonArc.Text" xml:space="preserve">
    <value>Bogen</value>
  </data>
  <data name="comboBoxSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="comboBoxUnits.ToolTip" xml:space="preserve">
    <value>Einheit, in der die Größe der Vorlage berechnet wird</value>
  </data>
  <data name="ribbonPanelSize.Text" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="ribbonPanelSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="ribbonTabSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="checkBoxSymbols.ToolTip" xml:space="preserve">
    <value>Symbole einschließen</value>
  </data>
  <data name="buttonHalfTone.Text" xml:space="preserve">
    <value>Halbton</value>
  </data>
  <data name="checkBoxDigits.Text" xml:space="preserve">
    <value>Ziffern</value>
  </data>
  <data name="buttonFull.Text" xml:space="preserve">
    <value>Vollständig</value>
  </data>
  <data name="ribbonTabResultImage.Text" xml:space="preserve">
    <value>Vorschau-Bild</value>
  </data>
  <data name="checkBoxDigits.ToolTip" xml:space="preserve">
    <value>Inklusive Ziffern</value>
  </data>
  <data name="ribbonPanelSheme.Text" xml:space="preserve">
    <value>Vorlage</value>
  </data>
  <data name="comboBoxSymbols.ToolTip" xml:space="preserve">
    <value>Symbol-Schriftart in Vorlage</value>
  </data>
  <data name="ribbonPanelCrop.Text" xml:space="preserve">
    <value>Zuschneiden</value>
  </data>
  <data name="upDownDither.Text" xml:space="preserve">
    <value>Weichzeichner Stärke</value>
  </data>
  <data name="upDownStitchesPerUnit.ToolTip" xml:space="preserve">
    <value>Anzahl Steine pro gewählter Einheit</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="comboBoxUnits.Text" xml:space="preserve">
    <value>Einheit</value>
  </data>
  <data name="upDownCellSize.ToolTip" xml:space="preserve">
    <value>Zellengröße der Vorlage</value>
  </data>
  <data name="comboBoxColorsSubstitute.Text" xml:space="preserve">
    <value>Farben austauschen</value>
  </data>
  <data name="buttonStitches.ToolTip" xml:space="preserve">
    <value>Gibt Größe in Steinen an</value>
  </data>
  <data name="buttonLoad.Text" xml:space="preserve">
    <value>Laden</value>
  </data>
  <data name="ribbonPanelImage.Text" xml:space="preserve">
    <value>Bild</value>
  </data>
  <data name="tabPagePreview.Text" xml:space="preserve">
    <value>Vorschau Vorlage</value>
  </data>
  <data name="checkBoxEnsureBlackAndWhite.ToolTip" xml:space="preserve">
    <value>Sicherstellen, dass schwarze und weiße Farben in reduzierter Farbpalette verwendet werden</value>
  </data>
  <data name="buttonFlipV.ToolTip" xml:space="preserve">
    <value>Kippe das Bild vertikal (oben nach unten)</value>
  </data>
  <data name="upDownCellSize.Text" xml:space="preserve">
    <value>Zelle</value>
  </data>
  <data name="buttonNext.Text" xml:space="preserve">
    <value>Fertig stellen</value>
  </data>
  <data name="buttonFlipV.Text" xml:space="preserve">
    <value>Vertikal kippen</value>
  </data>
  <data name="comboBoxColorsSubstitute.ToolTip" xml:space="preserve">
    <value>Farbvergleich und Austausch</value>
  </data>
  <data name="buttonRotateCCW.ToolTip" xml:space="preserve">
    <value>Bild entgegen dem Uhrzeigersinn drehen</value>
  </data>
  <data name="checkBoxFixAspect.ToolTip" xml:space="preserve">
    <value>Passt Größenverhältnis an wenn eine Größenangabe verändert wird</value>
  </data>
  <data name="buttonCross.Text" xml:space="preserve">
    <value>Stichvorschau</value>
  </data>
  <data name="checkBoxRulers.Text" xml:space="preserve">
    <value>Lineale</value>
  </data>
  <data name="upDownWidth.ToolTip" xml:space="preserve">
    <value>Breite der Vorlage</value>
  </data>
  <data name="upDownMaxColors.Text" xml:space="preserve">
    <value>Max. Farben</value>
  </data>
  <data name="buttonArc.ToolTip" xml:space="preserve">
    <value>Schneide elliptischen Bereich aus</value>
  </data>
  <data name="ribbonTabSourceImage.Text" xml:space="preserve">
    <value>Quellbild</value>
  </data>
  <data name="upDownWidth.Text" xml:space="preserve">
    <value>Breite</value>
  </data>
  <data name="buttonClear.ToolTip" xml:space="preserve">
    <value>Leere den selektierten Bereich</value>
  </data>
  <data name="buttonRotateCW.ToolTip" xml:space="preserve">
    <value>Bild im Uhrzeigersinn drehen</value>
  </data>
  <data name="buttonColorSymbols.Text" xml:space="preserve">
    <value>Farbige Symbole</value>
  </data>
  <data name="buttonCm.ToolTip" xml:space="preserve">
    <value>Größe der Vorlage in Zentimetern angeben</value>
  </data>
  <data name="buttonRandom.Text" xml:space="preserve">
    <value>Zufällig</value>
  </data>
  <data name="checkBoxRulers.ToolTip" xml:space="preserve">
    <value>Zeige Lineale mit Spalten- und Zeilennummern</value>
  </data>
  <data name="comboBoxKit.ToolTip" xml:space="preserve">
    <value>Farbpalette, welche bei der Erstellung der Vorlage verwendet wird</value>
  </data>
  <data name="tabPageSymbols.Text" xml:space="preserve">
    <value>Symbole</value>
  </data>
  <data name="buttonRect.Text" xml:space="preserve">
    <value>Rechteck</value>
  </data>
  <data name="buttonFlipH.Text" xml:space="preserve">
    <value>Horizontal kippen</value>
  </data>
</root>